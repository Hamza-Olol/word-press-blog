# create anchors to reuse code
.env-keys: &env-keys
  image: hashicorp/terraform:1.3.2
  environment:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

.terraform-plan-script: &tf-plan |
  terraform init -reconfigure -upgrade
  terraform validate
  terraform plan

.terraform-apply-script: &tf-apply |
  terraform apply -auto-approve

.terraform-destroy-script: &tf-destroy |
  terraform destroy -auto-approve

.checkov: &checkov
  step:
    name: Checkov
    image:
      name: bridgecrew/checkov:latest
      entrypoint:
        - '/usr/bin/env'
        - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
    script:
      - checkov -d . --download-external-modules true

# caches
definitions:
  caches:
    backend-terraform: .terraform

pipelines:
    default:
        # - <<: *checkov
        - step:
            <<: *env-keys
            name: Branch plan deployment
            script:
                - *tf-plan
            artifacts:
                - .terraform.lock.hcl
            caches:
                - backend-terraform

        - step:
            <<: *env-keys
            name: Branch apply deployment
            script:
                - *tf-apply
            caches:
                - backend-terraform

        - step:
            <<: *env-keys
            name: Branch destroy deployment
            trigger: manual
            script:
                - *tf-destroy
            caches:
                - backend-terraform
              
    branches:
        master:
            - <<: *checkov
            - step:
                name: Master plan deployment
                <<: *env-keys
                script:
                    - *tf-plan
                artifacts:
                  - .terraform.lock.hcl
                caches:
                  - backend-terraform

            - step:
                name: Master apply deployment
                <<: *env-keys
                script:
                    - *tf-apply
                caches:
                  - backend-terraform

            - step:
                name: Master destroy deployment
                trigger: manual
                <<: *env-keys
                script:
                    - *tf-destroy
                caches:
                  - backend-terraform